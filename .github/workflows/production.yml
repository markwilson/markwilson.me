name: Deploy to markwilson.me

on:
  push:
    branches:
      - master
      - send-message

jobs:
  push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup node
        uses: actions/setup-node@v1

      - name: Install dependencies
        run: yarn install

      - name: Install send message dependencies
        run: yarn install
        working-directory: ./sendMessage

      - name: Package send message function
        run: zip -r ../send_message.zip .
        working-directory: ./sendMessage

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.12.26

      - name: Initialise Terraform
        run: terraform init

      - name: Validate Terraform
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -var="recaptcha_secret=${{ secrets.RECAPTCHA_SECRET }}" -var="send_to=${{ secrets.SEND_TO }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="recaptcha_secret=${{ secrets.RECAPTCHA_SECRET }}" -var="send_to=${{ secrets.SEND_TO }}"

      - name: Get API Gateway domain
        shell: bash
        run: echo '::set-env name=REACT_APP_SEND_MESSAGE_URL::$(terraform output -json api_domain)'

      - name: Create production-ready build
        run: yarn build

      - name: Deploy to S3
        run: aws s3 sync --delete --acl public-read build s3://markwilson.me/

      - name: Get CloudFront distribution ID
        shell: bash
        id: cloudfront
        run: |
          CLOUDFRONT_DISTRIBUTION_ID=$(terraform output -json cloudfront_distribution_id)
          echo -n "${CLOUDFRONT_DISTRIBUTION_ID//$'%0A'/}"

      - name: Clear CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id "${{ steps.cloudfront.outputs.stdout }}" --paths "/*"
